#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    /*scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };*/

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC    &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &trans  &kp N6     &kp N7     &kp N8     &kp N9         &kp N0            &kp BACKSPACE
&kp TAB    &kp Q      &kp W         &kp E         &kp R   &kp T        &trans  &kp Y      &kp U      &kp I      &kp O          &kp P             &kp APOS
&kp CAPS   &kp A      &kp S         &kp D         &kp F   &kp G        &trans  &kp H      &kp J      &kp K      &kp L          &kp SEMI          &kp SLASH
&kp LSHFT  &kp Z      &kp X         &kp C         &kp V   &kp B        &trans  &kp N      &kp M      &kp COMMA  &kp DOT        &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans     &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &trans  &kp SPACE  &kp ENTER  &mo 2      &kp RIGHT_ALT  &kp DELETE
            >;

            //sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;

            display-name = "L0";
        };

        layer_1 {
            bindings = <
&kp GRAVE  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_SPD    &trans  &rgb_ug RGB_SPI  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans           &trans            &trans
&kp F1     &kp F2           &kp F3          &kp F4           &kp F5           &kp F6             &trans  &kp F7           &kp F8           &kp F9           &kp F10          &kp F11           &kp F12
&kp TILDE  &trans           &trans          &trans           &trans           &trans             &trans  &kp PG_UP        &kp END          &kp UP_ARROW     &kp HOME         &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans     &trans           &trans          &trans           &trans           &trans             &trans  &kp PAGE_DOWN    &kp LEFT_ARROW   &kp DOWN_ARROW   &kp RIGHT_ARROW  &trans            &trans
&trans     &trans           &trans          &trans           &trans           &trans             &trans  &trans           &trans           &trans           &trans           &trans
            >;

            display-name = "L1";

            //sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans     &trans
&trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &kp UNDER  &kp PLUS
&trans  &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &kp LBRC   &kp RBRC
&trans  &trans        &trans          &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans     &trans
&trans  &trans        &trans          &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "L2";

            //sensor-bindings = <&scroll_encoder>;
        };
    };
};
